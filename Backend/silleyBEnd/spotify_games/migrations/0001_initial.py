# Generated by Django 5.1.4 on 2025-01-21 13:01

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('spotify', '0015_mostlistenedartist_most_popular_preview_url_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(default=0)),
                ('max_tries', models.IntegerField(default=10)),
                ('current_tries', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.user')),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_track_id', models.CharField(max_length=255)),
                ('track_name', models.CharField(max_length=255)),
                ('artist_name', models.CharField(max_length=255)),
                ('album_image_url', models.URLField()),
                ('preview_url', models.URLField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_games.gamesession')),
            ],
        ),
        migrations.CreateModel(
            name='GameLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(max_length=50)),
                ('score', models.IntegerField()),
                ('achieved_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.user')),
            ],
            options={
                'indexes': [models.Index(fields=['-score', 'game_type'], name='spotify_gam_score_42a784_idx')],
            },
        ),
        migrations.CreateModel(
            name='GameState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_state', models.JSONField()),
                ('metadata', models.JSONField(default=dict)),
                ('last_action', models.CharField(max_length=50, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_games.gamesession')),
            ],
            options={
                'indexes': [models.Index(fields=['session', 'last_updated'], name='spotify_gam_session_dbe212_idx')],
            },
        ),
        migrations.CreateModel(
            name='GameStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(max_length=50)),
                ('total_games', models.IntegerField(default=0)),
                ('total_score', models.IntegerField(default=0)),
                ('highest_score', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('total_time_played', models.DurationField(default=datetime.timedelta(0))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.user')),
            ],
            options={
                'unique_together': {('user', 'game_type')},
            },
        ),
    ]
